apply plugin: 'com.android.application'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "com.udacity.gradle.builditbigger"
        minSdkVersion 10
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors{
        free{
            applicationId "com.udacity.gradle.builditbigger.free"
        }
        paid{
            applicationId "com.udacity.gradle.builditbigger.paid"
        }
    }



}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    // Added for AdMob
    compile project(':mylibrary')
    compile 'com.android.support:appcompat-v7:22.1.0'
    compile 'com.google.android.gms:play-services-ads:8.1.0'
    compile project(path: ':backend', configuration: 'android-endpoints')
}

/*
Finally, we need to actually use the library. Give the textView in
fragment_main.xml an id, we used textView. Then in MainActivityFragment, add:
    import com..udacitygradle.jokes.Joker;
Then replace onCreateView in MainActivityFragment with the following.
    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        View rootView = inflater.inflate(R.layout.fragment_main, container, false);
        TextView textView = (TextView) rootView.findViewById(R.id.textView);
        Joker myJoker = new Joker();
        textView.setText(myJoker.getJoke());
        return rootView;
    }
Then we're ready to build! When you run the build, watch the Gradle Console,
which you can open at the bottom right of Android Studio. You'll notice
something like this:
:app:preBuild UP-TO-DATE
:app:preDebugBuild UP-TO-DATE
:app:compileDebugNdk UP-TO-DATE
:app:checkDebugManifest
:app:preReleaseBuild UP-TO-DATE
:javaJokes:compileJava
:javaJokes:processResources UP-TO-DATE
:javaJokes:classes
:javaJokes:jar
:app:prepareComAndroidSupportAppcompatV72210Library UP-TO-DATE
:app:prepareComAndroidSupportSupportV42210Library UP-TO-DATE
:app:prepareDebugDependencies
The app project was running some tasks, then the javaJokes project jumped in
to create a JAR for the app project to use!
That's all there is to it to add a Java library project to an Android Studio build!
*/